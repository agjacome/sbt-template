#!/usr/bin/env bash
#
# sbt-template, scala/sbt base project generator
# author: Alberto G. JÃ¡come <agjacome@gmail.com>

set -e

create_project() {
    copy_project_files
    if [[ -n $create_git ]]; then initialize_git_repo; fi
    if [[ -n $create_sbt ]]; then download_sbt_script; fi
    if [[ -n $create_mux ]]; then create_tmux_project; fi
}

copy_project_files() {
    cp -r "$script_path/sbt-project/." $path
    sed -i -e "s/NAME/$name/g" "$path/build.sbt" "$path/README.md"
}

initialize_git_repo() {
    if [[ -n $create_git ]]; then
        git init -q $path
    else
        rm "$path/.gitignore"
        sed -i -e '/git/,+1d' "$path/project/plugins.sbt"
        echo 'version in ThisBuild := "0.1"' > "$path/version.sbt"
    fi
}

download_sbt_script() {
    local sbt_file="$path/sbt"
    curl -s https://raw.githubusercontent.com/paulp/sbt-extras/master/sbt > $sbt_file
    chmod 0755 $sbt_file
}

create_tmux_project() {
    local title=$(basename $path)
    local dest="$HOME/.tmuxinator/${title}.yml"
    local template=$(choose_tmux_template)

    mkdir -p $(dirname $dest)
    cp "$script_path/mux-project/$template" $dest
    sed -i -e "s/NAME/$title/g" -e "s/PATH/$(echo $path | sed -e 's/[\/&]/\\&/g')/g" $dest
}

choose_tmux_template() {
    local template='project'
    if [[ -n $create_git ]]; then template+='-git'; fi
    if [[ -n $create_sbt ]]; then template+='-sbt'; fi
    echo "${template}.yml"
}

show_usage() {
cat << EOM
Usage: $script_name [options] [path-of-project]

$script_name will create a basic Scala SBT project in the path given by
'path-of-project'. If none is given, it will default to the current path.

After a successful execution, the path of the project will contain a basic
directory hierarchy and some prepopulated settings, dependencies and plugins
for SBT. It can also create the full path to the project, initialize a new git
repository, download an alternative SBT script, and create a tmuxinator
project.

Available options:
    -h print this message
    -m create path to project if does not exist (do a 'mkdir -p')
    -g initialize a git repository in path (do a 'git init')
    -s download Paul Phillips' sbt runner (https://github.com/paulp/sbt-extras)
    -t create tmuxinator project (in '~/.tmuxinator/projectname.yml')
EOM
}

### main script ###

declare -r script_path=$(cd $(dirname $0) && pwd)
declare -r script_name=${script_path##*/}

OPTIND=1
while getopts 'ghmst' opt; do
    case $opt in
        h) show_usage && exit 0;;
        m) declare -r create_dir=1;;
        g) declare -r create_git=1;;
        s) declare -r create_sbt=1;;
        t) declare -r create_mux=1;;
        ?) show_usage && exit 1;;
    esac
done
shift $((OPTIND - 1))

if [[ -n $create_dir ]]; then mkdir -p ${1:-$(pwd)}; fi

declare -r path=$(realpath ${1:-$(pwd)})
declare -r name=$(echo $(basename $path) | sed -e 's/[-_]\([a-z]\)/\u\1/g' | sed -e 's/.*/\u&/')

create_project
